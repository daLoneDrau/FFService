package com.osrapi.models.bp;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.MapKeyColumn;
import javax.persistence.MapKeyJoinColumn;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "hex", schema = "bp")
public final class BPHexEntity {
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "hex_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
  generator = "hex_seq")
    @SequenceGenerator(
        name = "hex_seq",
        sequenceName = "bp.hex_id_seq",
        allocationSize = 1
    )
    private Long                    id;
    /** Creates a new instance of {@link BPHexEntity}. */
    public BPHexEntity() {
        super();
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }
    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }

    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    
    private String                    name;
    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }

    /** the y. */
    @Column(name = "y")
    @JsonProperty("y")
    @NotNull
    private long                    y;
    /**
     * Gets the y.
     * @return {@link long}
     */
    public long getY() {
        return y;
    }
    /**
     * Sets the y.
     * @param val the new value
     */
    public void setY(final long val) {
        y = val;
    }

    /** the x. */
    @Column(name = "x")
    @JsonProperty("x")
    @NotNull
    private long                    x;
    /**
     * Gets the x.
     * @return {@link long}
     */
    public long getX() {
        return x;
    }
    /**
     * Sets the x.
     * @param val the new value
     */
    public void setX(final long val) {
        x = val;
    }

    /** the type. */
    @ManyToOne(targetEntity = BPHexTypeEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "type")
    @JsonProperty("hex_type")
  @NotNull
    private BPHexTypeEntity    type;
    /**
     * Gets the type.
     * @return {@link BPHexTypeEntity}
     */
    public BPHexTypeEntity getType() {
        return type;
    }
    /**
     * Sets the type.
     * @param val the new value
     */
    public void setType(final BPHexTypeEntity val) {
        type = val;
    }

    /**
     * the list of {@link BPHexFeatureEntity}s associated with this
     * {@link BPHexEntity}.
     */
    @OneToMany(targetEntity = BPHexFeatureEntity.class,
      fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "hex_features_lookup", schema = "bp",
  joinColumns = @JoinColumn(name = "hex_id",
  referencedColumnName = "hex_id"),
  inverseJoinColumns = @JoinColumn(name = "hex_feature_id",
  referencedColumnName = "hex_feature_id"))
    @JsonProperty("features")
    private List<BPHexFeatureEntity>    features;
    /**
     * Gets the list of features.
     * @return {@link List}<{@link BPHexFeatureEntity}>
     */
    public List<BPHexFeatureEntity> getFeatures() {
        return features;
    }
    /**
     * Sets the list of features.
     * @param val the new value
     */
    public void setFeatures(final List<BPHexFeatureEntity> val) {
        features = val;
    }

}

